                       | #######################################################################
                       | # Test for copying block of size 63;
                       | #######################################################################
  0x0000:              | 	.pos 0
  0x0000:30f4d4020000  | main:	irmovl Stack, %esp  	# Set up stack pointer
  0x0006:30f5d4020000  | 	irmovl Stack, %ebp  	# Set up base pointer
                       | 
                       | 	# Set up arguments for copy function and then invoke it
  0x000c:30f03f000000  | 	irmovl $63, %eax		# src and dst have 63 elements
  0x0012:a00f          | 	pushl %eax
  0x0014:30f094010000  | 	irmovl dest, %eax	# dst array
  0x001a:a00f          | 	pushl %eax
  0x001c:30f090000000  | 	irmovl src, %eax	# src array
  0x0022:a00f          | 	pushl %eax
  0x0024:802a000000    | 	call ncopy		 
  0x0029:00            | 	halt			# should halt with num nonzeros in %eax
  0x002a:              | StartFun:
                       | #/* $begin ncopy-ys */
                       | ##################################################################
                       | # ncopy.ys - Copy a src block of len ints to dst.
                       | # Return the number of positive ints (>0) contained in src.
                       | #
                       | # Include your name and ID here.
                       | #
                       | # Describe how and why you modified the baseline code.
                       | #
                       | ##################################################################
                       | # Do not modify this portion
                       | # Function prologue.
  0x002a:a05f          | ncopy:	pushl %ebp		# Save old frame pointer
  0x002c:2045          | 	rrmovl %esp,%ebp	# Set up new frame pointer
  0x002e:a06f          | 	pushl %esi		# Save callee-save regs
  0x0030:a03f          | 	pushl %ebx
  0x0032:a07f          | 	pushl %edi
  0x0034:503508000000  | 	mrmovl 8(%ebp),%ebx	# src
  0x003a:502510000000  | 	mrmovl 16(%ebp),%edx	# len
  0x0040:50150c000000  | 	mrmovl 12(%ebp),%ecx	# dst
                       | 
                       | ##################################################################
                       | # You can modify this portion
                       | 	# Loop header
  0x0046:6300          | 	xorl %eax,%eax		# count = 0;
  0x0048:6222          | 	andl %edx,%edx		# len <= 0?
  0x004a:7183000000    | 	jle Done		# if so, goto Done:
                       | 
  0x004f:506300000000  | Loop:	mrmovl (%ebx), %esi	# read val from src...
  0x0055:406100000000  | 	rmmovl %esi, (%ecx)	# ...and store it to dst
  0x005b:6266          | 	andl %esi, %esi		# val <= 0?
  0x005d:716a000000    | 	jle Npos		# if so, goto Npos:
  0x0062:30f701000000  | 	irmovl $1, %edi
  0x0068:6070          | 	addl %edi, %eax		# count++
  0x006a:30f701000000  | Npos:	irmovl $1, %edi
  0x0070:6172          | 	subl %edi, %edx		# len--
  0x0072:30f704000000  | 	irmovl $4, %edi
  0x0078:6073          | 	addl %edi, %ebx		# src++
  0x007a:6071          | 	addl %edi, %ecx		# dst++
  0x007c:6222          | 	andl %edx,%edx		# len > 0?
  0x007e:764f000000    | 	jg Loop			# if so, goto Loop:
                       | ##################################################################
                       | # Do not modify the following section of code
                       | # Function epilogue.
  0x0083:              | Done:
  0x0083:b07f          | 	popl %edi               # Restore callee-save registers
  0x0085:b03f          | 	popl %ebx
  0x0087:b06f          | 	popl %esi
  0x0089:2054          | 	rrmovl %ebp, %esp
  0x008b:b05f          | 	popl %ebp
  0x008d:90            | 	ret
                       | ##################################################################
                       | # Keep the following label at the end of your function
  0x008e:              | End:
                       | #/* $end ncopy-ys */
  0x008e:              | EndFun:
                       | 
                       | ###############################
                       | # Source and destination blocks 
                       | ###############################
  0x0090:              | 	.align 4
  0x0090:              | src:
  0x0090:ffffffff      | 	.long -1
  0x0094:02000000      | 	.long 2
  0x0098:03000000      | 	.long 3
  0x009c:04000000      | 	.long 4
  0x00a0:05000000      | 	.long 5
  0x00a4:faffffff      | 	.long -6
  0x00a8:07000000      | 	.long 7
  0x00ac:08000000      | 	.long 8
  0x00b0:09000000      | 	.long 9
  0x00b4:0a000000      | 	.long 10
  0x00b8:f5ffffff      | 	.long -11
  0x00bc:0c000000      | 	.long 12
  0x00c0:0d000000      | 	.long 13
  0x00c4:f2ffffff      | 	.long -14
  0x00c8:f1ffffff      | 	.long -15
  0x00cc:f0ffffff      | 	.long -16
  0x00d0:11000000      | 	.long 17
  0x00d4:12000000      | 	.long 18
  0x00d8:edffffff      | 	.long -19
  0x00dc:14000000      | 	.long 20
  0x00e0:15000000      | 	.long 21
  0x00e4:16000000      | 	.long 22
  0x00e8:e9ffffff      | 	.long -23
  0x00ec:18000000      | 	.long 24
  0x00f0:19000000      | 	.long 25
  0x00f4:e6ffffff      | 	.long -26
  0x00f8:1b000000      | 	.long 27
  0x00fc:e4ffffff      | 	.long -28
  0x0100:e3ffffff      | 	.long -29
  0x0104:1e000000      | 	.long 30
  0x0108:e1ffffff      | 	.long -31
  0x010c:e0ffffff      | 	.long -32
  0x0110:dfffffff      | 	.long -33
  0x0114:22000000      | 	.long 34
  0x0118:ddffffff      | 	.long -35
  0x011c:24000000      | 	.long 36
  0x0120:25000000      | 	.long 37
  0x0124:26000000      | 	.long 38
  0x0128:27000000      | 	.long 39
  0x012c:d8ffffff      | 	.long -40
  0x0130:d7ffffff      | 	.long -41
  0x0134:d6ffffff      | 	.long -42
  0x0138:2b000000      | 	.long 43
  0x013c:d4ffffff      | 	.long -44
  0x0140:d3ffffff      | 	.long -45
  0x0144:2e000000      | 	.long 46
  0x0148:d1ffffff      | 	.long -47
  0x014c:30000000      | 	.long 48
  0x0150:cfffffff      | 	.long -49
  0x0154:32000000      | 	.long 50
  0x0158:cdffffff      | 	.long -51
  0x015c:34000000      | 	.long 52
  0x0160:cbffffff      | 	.long -53
  0x0164:36000000      | 	.long 54
  0x0168:37000000      | 	.long 55
  0x016c:c8ffffff      | 	.long -56
  0x0170:c7ffffff      | 	.long -57
  0x0174:c6ffffff      | 	.long -58
  0x0178:c5ffffff      | 	.long -59
  0x017c:c4ffffff      | 	.long -60
  0x0180:c3ffffff      | 	.long -61
  0x0184:c2ffffff      | 	.long -62
  0x0188:c1ffffff      | 	.long -63
  0x018c:fadebc00      | 	.long 0xbcdefa # This shouldn't get moved
                       | 
  0x0190:              | 	.align 16
  0x0190:              | Predest:
  0x0190:fadebc00      | 	.long 0xbcdefa
  0x0194:              | dest:
  0x0194:abefcd00      | 	.long 0xcdefab
  0x0198:abefcd00      | 	.long 0xcdefab
  0x019c:abefcd00      | 	.long 0xcdefab
  0x01a0:abefcd00      | 	.long 0xcdefab
  0x01a4:abefcd00      | 	.long 0xcdefab
  0x01a8:abefcd00      | 	.long 0xcdefab
  0x01ac:abefcd00      | 	.long 0xcdefab
  0x01b0:abefcd00      | 	.long 0xcdefab
  0x01b4:abefcd00      | 	.long 0xcdefab
  0x01b8:abefcd00      | 	.long 0xcdefab
  0x01bc:abefcd00      | 	.long 0xcdefab
  0x01c0:abefcd00      | 	.long 0xcdefab
  0x01c4:abefcd00      | 	.long 0xcdefab
  0x01c8:abefcd00      | 	.long 0xcdefab
  0x01cc:abefcd00      | 	.long 0xcdefab
  0x01d0:abefcd00      | 	.long 0xcdefab
  0x01d4:abefcd00      | 	.long 0xcdefab
  0x01d8:abefcd00      | 	.long 0xcdefab
  0x01dc:abefcd00      | 	.long 0xcdefab
  0x01e0:abefcd00      | 	.long 0xcdefab
  0x01e4:abefcd00      | 	.long 0xcdefab
  0x01e8:abefcd00      | 	.long 0xcdefab
  0x01ec:abefcd00      | 	.long 0xcdefab
  0x01f0:abefcd00      | 	.long 0xcdefab
  0x01f4:abefcd00      | 	.long 0xcdefab
  0x01f8:abefcd00      | 	.long 0xcdefab
  0x01fc:abefcd00      | 	.long 0xcdefab
  0x0200:abefcd00      | 	.long 0xcdefab
  0x0204:abefcd00      | 	.long 0xcdefab
  0x0208:abefcd00      | 	.long 0xcdefab
  0x020c:abefcd00      | 	.long 0xcdefab
  0x0210:abefcd00      | 	.long 0xcdefab
  0x0214:abefcd00      | 	.long 0xcdefab
  0x0218:abefcd00      | 	.long 0xcdefab
  0x021c:abefcd00      | 	.long 0xcdefab
  0x0220:abefcd00      | 	.long 0xcdefab
  0x0224:abefcd00      | 	.long 0xcdefab
  0x0228:abefcd00      | 	.long 0xcdefab
  0x022c:abefcd00      | 	.long 0xcdefab
  0x0230:abefcd00      | 	.long 0xcdefab
  0x0234:abefcd00      | 	.long 0xcdefab
  0x0238:abefcd00      | 	.long 0xcdefab
  0x023c:abefcd00      | 	.long 0xcdefab
  0x0240:abefcd00      | 	.long 0xcdefab
  0x0244:abefcd00      | 	.long 0xcdefab
  0x0248:abefcd00      | 	.long 0xcdefab
  0x024c:abefcd00      | 	.long 0xcdefab
  0x0250:abefcd00      | 	.long 0xcdefab
  0x0254:abefcd00      | 	.long 0xcdefab
  0x0258:abefcd00      | 	.long 0xcdefab
  0x025c:abefcd00      | 	.long 0xcdefab
  0x0260:abefcd00      | 	.long 0xcdefab
  0x0264:abefcd00      | 	.long 0xcdefab
  0x0268:abefcd00      | 	.long 0xcdefab
  0x026c:abefcd00      | 	.long 0xcdefab
  0x0270:abefcd00      | 	.long 0xcdefab
  0x0274:abefcd00      | 	.long 0xcdefab
  0x0278:abefcd00      | 	.long 0xcdefab
  0x027c:abefcd00      | 	.long 0xcdefab
  0x0280:abefcd00      | 	.long 0xcdefab
  0x0284:abefcd00      | 	.long 0xcdefab
  0x0288:abefcd00      | 	.long 0xcdefab
  0x028c:abefcd00      | 	.long 0xcdefab
  0x0290:              | Postdest:
  0x0290:bcfade00      | 	.long 0xdefabc
                       | 
  0x0294:              | .align 4
                       | # Run time stack
  0x0294:00000000      | 	.long 0
  0x0298:00000000      | 	.long 0
  0x029c:00000000      | 	.long 0
  0x02a0:00000000      | 	.long 0
  0x02a4:00000000      | 	.long 0
  0x02a8:00000000      | 	.long 0
  0x02ac:00000000      | 	.long 0
  0x02b0:00000000      | 	.long 0
  0x02b4:00000000      | 	.long 0
  0x02b8:00000000      | 	.long 0
  0x02bc:00000000      | 	.long 0
  0x02c0:00000000      | 	.long 0
  0x02c4:00000000      | 	.long 0
  0x02c8:00000000      | 	.long 0
  0x02cc:00000000      | 	.long 0
  0x02d0:00000000      | 	.long 0
                       | 
  0x02d4:              | Stack:
