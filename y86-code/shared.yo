                       | # 0x4000: shared start
                       | # 0xC000: bus start
  0x0000:              |   .pos 0
  0x0000:30f000400000  |   irmovl 0x4000, %eax
  0x0006:30f101000000  |   irmovl 0x1, %ecx
                       | 
  0x000c:f01000000000  |   rmswap %ecx, (%eax)
  0x0012:10            |   nop                      # ecx needs a round to write back
  0x0013:6211          |   andl   %ecx, %ecx
  0x0015:30f201000000  |   irmovl 0x1, %edx
  0x001b:6312          |   xorl   %ecx, %edx        # edx = *eax ^ 1
                       | 
  0x001d:              | end:
                       |   # set up stack
  0x001d:30f400080000  |   irmovl stack, %esp
  0x0023:30f500080000  |   irmovl stack, %ebp
                       | 
  0x0029:              | lock:                      # while (*eax != edx)
  0x0029:503000000000  |   mrmovl (%eax), %ebx
  0x002f:6323          |   xorl %edx, %ebx
  0x0031:7429000000    |   jne lock
                       | 
                       | # lock obtained
  0x0036:c0f601000000  |   iaddl  0x1, %esi
  0x003c:401000000000  |   rmmovl %ecx, (%eax)
  0x0042:7029000000    |   jmp lock
                       | 
  0x0800:              |   .pos 0x800
  0x0800:              | stack:
