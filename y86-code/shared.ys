# 0x4000: shared start
# 0xC000: bus start
  .pos 0
  irmovl 0x4000, %eax
  irmovl 0x1, %ecx

  rmswap %ecx, (%eax)
  nop                      # ecx needs a round to write back
  andl   %ecx, %ecx
  irmovl 0x1, %edx
  xorl   %ecx, %edx        # edx = *eax ^ 1

end:
  # set up stack
  irmovl stack, %esp
  irmovl stack, %ebp
  subl   %edx, %esp

lock:                      # while (*eax != edx)
  mrmovl (%eax), %ebx
  xorl %edx, %ebx
  jne lock

# lock obtained
  iaddl  0x1, %esi
  rmmovl %ecx, (%eax)
  jmp lock

  .pos 0x800
stack:
